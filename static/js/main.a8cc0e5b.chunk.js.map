{"version":3,"sources":["components/BaseEditor.tsx","components/DiffEditor.tsx","App.tsx","hooks/useWindowSize.ts","reportWebVitals.ts","index.tsx"],"names":["BaseEditor","props","editorRef","useRef","useResizeDetector","width","height","ref","useEffect","current","layout","className","language","theme","value","code","options","minimap","enabled","onChange","editorDidMount","editor","monaco","typescript","typescriptDefaults","setDiagnosticsOptions","noSemanticValidation","noSyntaxValidation","DiffEditor","original","code1","code2","onCode1Change","_","runPrettier","sourceCode","prettier","format","trailingComma","tabWidth","semi","singleQuote","printWidth","plugins","parserBabel","parserHtml","error","toString","App","useState","hasPrettier","setHasPrettier","workCode","setWorkCode","setCode1","Function","func","$","e","runGoGoCode","code1ToShow","useMemo","code2ToShow","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","winWidth","winHeight","split","defaultSize","minSize","maxSize","checkedChildren","unCheckedChildren","checked","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8cc0e5b.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\nimport MonacoEditor from 'react-monaco-editor';\nimport { useResizeDetector } from 'react-resize-detector';\nimport * as monacoEditor from 'monaco-editor/esm/vs/editor/editor.api';\n\ntype Editor = monacoEditor.editor.IStandaloneCodeEditor;\n\ninterface Props {\n  code: string;\n  onChange: (code: string) => void;\n  language: string;\n}\n\nfunction BaseEditor(props: Props) {\n  const editorRef = useRef<Editor>();\n  const { width, height, ref } = useResizeDetector();\n  useEffect(() => {\n    editorRef.current?.layout();\n  }, [width, height]);\n  return (\n    <div ref={ref} className=\"w-full h-full\">\n      <MonacoEditor\n        language={props.language}\n        theme=\"vs-dark\"\n        value={props.code}\n        options={{\n          minimap: {\n            enabled: false,\n          },\n        }}\n        onChange={props.onChange}\n        editorDidMount={(editor: Editor) => (editorRef.current = editor)}\n      />\n    </div>\n  );\n}\n\nexport default BaseEditor;\n","import { useEffect, useRef } from 'react';\nimport { MonacoDiffEditor } from 'react-monaco-editor';\nimport { useResizeDetector } from 'react-resize-detector';\nimport * as monaco from 'monaco-editor';\nimport * as monacoEditor from 'monaco-editor/esm/vs/editor/editor.api';\n\ntype Editor = monacoEditor.editor.IStandaloneDiffEditor;\n\ninterface Props {\n  code1: string;\n  code2: string;\n  onCode1Change?: (code: string) => void;\n}\n\nmonaco.languages.typescript.typescriptDefaults.setDiagnosticsOptions({\n  noSemanticValidation: true,\n  noSyntaxValidation: true,\n});\n\nfunction DiffEditor(props: Props) {\n  const editorRef = useRef<Editor>();\n  const { width, height, ref } = useResizeDetector();\n  useEffect(() => {\n    editorRef.current?.layout();\n  }, [width, height]);\n  return (\n    <div ref={ref} className=\"w-full h-full\">\n      <MonacoDiffEditor\n        language=\"typescript\"\n        theme=\"vs-dark\"\n        original={props.code1}\n        value={props.code2}\n        editorDidMount={(editor: Editor) => (editorRef.current = editor)}\n        onChange={props.onCode1Change || ((_: string) => {})}\n      />\n    </div>\n  );\n}\n\nexport default DiffEditor;\n","import { useMemo, useState } from 'react';\nimport './App.css';\nimport BaseEditor from './components/BaseEditor';\nimport DiffEditor from './components/DiffEditor';\nimport SplitPane from 'react-split-pane';\nimport $ from 'gogocode';\nimport prettier from 'prettier/standalone';\nimport parserBabel from 'prettier/parser-babel';\nimport parserHtml from 'prettier/parser-html';\nimport { Switch } from 'antd';\nimport useWindowSize from './hooks/useWindowSize';\n\nconst defaultWorkCode = `function transform($, sourceCode) {\n  // 在这里返回你生成的代码\n  return $(sourceCode).replace('const a = $_$', 'const a = 2').generate();\n}`;\nconst defaultCode1 = `const a = 1\nconst b = 2`;\n\nfunction runGoGoCode(sourceCode: string, workCode: string) {\n  try {\n    // eslint-disable-next-line no-new-func\n    const func = new Function('return ' + workCode)();\n    return func($, sourceCode);\n  } catch (e) {\n    return '/**\\n出错了！\\n' + e + '\\n**/';\n  }\n}\n\nfunction runPrettier(sourceCode: string) {\n  try {\n    return prettier.format(sourceCode, {\n      trailingComma: 'es5',\n      tabWidth: 2,\n      semi: false,\n      singleQuote: true,\n      printWidth: 40,\n      plugins: [parserBabel, parserHtml],\n    });\n  } catch (error) {\n    return error.toString();\n  }\n}\n\nfunction App() {\n  const hasSourceCode = true;\n  const [hasPrettier, setHasPrettier] = useState(true);\n  const [workCode, setWorkCode] = useState(defaultWorkCode);\n  const [code1, setCode1] = useState(defaultCode1);\n  const code2 = runGoGoCode(code1, workCode);\n\n  const code1ToShow = useMemo(() => {\n    return hasPrettier ? runPrettier(code1) : code1;\n  }, [hasPrettier, code1]);\n\n  const code2ToShow = useMemo(() => {\n    return hasPrettier ? runPrettier(code2) : code2;\n  }, [hasPrettier, code2]);\n\n  const { width: winWidth, height: winHeight } = useWindowSize();\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <div className=\"text-xl bg-dark flex-none px-6 py-4 text-white\">\n        GoGoCode PlayGround\n      </div>\n      <div className=\"relative flex-auto\">\n        <SplitPane\n          split=\"horizontal\"\n          defaultSize=\"50%\"\n          minSize={100}\n          maxSize={winHeight - 100}\n        >\n          <SplitPane\n            className=\"h-full w-full\"\n            split=\"vertical\"\n            defaultSize={hasSourceCode ? '50%' : '100%'}\n            minSize={100}\n            maxSize={winWidth - 100}\n          >\n            {hasSourceCode && (\n              <div className=\"h-full flex-1\">\n                <BaseEditor\n                  code={code1}\n                  onChange={setCode1}\n                  language=\"typescript\"\n                />\n              </div>\n            )}\n            <div className=\"h-full flex-1\">\n              <BaseEditor\n                code={workCode}\n                onChange={setWorkCode}\n                language=\"javascript\"\n              />\n            </div>\n          </SplitPane>\n          <div className=\"h-full w-full\">\n            <div className=\"bg-dark flex justify-between px-6 py-2 text-white border-gray-800 border-t\">\n              <div>对比结果</div>\n              <div>\n                <Switch\n                  checkedChildren=\"格式化\"\n                  unCheckedChildren=\"格式化\"\n                  checked={hasPrettier}\n                  onChange={setHasPrettier}\n                />\n              </div>\n            </div>\n            <DiffEditor code1={code1ToShow} code2={code2ToShow} />\n          </div>\n        </SplitPane>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\nexport default function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: 0,\n    height: 0,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}